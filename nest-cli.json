{
  "$schema": "https://json.schemastore.org/nest-cli",
  "collection": "@nestjs/schematics",
  "sourceRoot": "apps/service-1/src",
  "compilerOptions": {
    "deleteOutDir": true,
    "webpack": true,
    "tsConfigPath": "apps/service-1/tsconfig.app.json"
  },
  "monorepo": true,
  "root": "apps/service-1",
  "projects": {
    "api-gateway": {
      "type": "application",
      "root": "apps/api-gateway",
      "entryFile": "main",
      "sourceRoot": "apps/api-gateway/src",
      "compilerOptions": {
        "tsConfigPath": "apps/api-gateway/tsconfig.app.json"
      }
    },
    "cook-cake-service": {
      "type": "application",
      "root": "apps/cook-cake-service",
      "entryFile": "main",
      "sourceRoot": "apps/cook-cake-service/src",
      "compilerOptions": {
        "tsConfigPath": "apps/cook-cake-service/tsconfig.app.json"
      }
    },
    "create-wheat-service": {
      "type": "application",
      "root": "apps/create-wheat-service",
      "entryFile": "main",
      "sourceRoot": "apps/create-wheat-service/src",
      "compilerOptions": {
        "tsConfigPath": "apps/create-wheat-service/tsconfig.app.json"
      }
    },
    "cron-scheduler": {
      "type": "application",
      "root": "apps/cron-scheduler",
      "entryFile": "main",
      "sourceRoot": "apps/cron-scheduler/src",
      "compilerOptions": {
        "tsConfigPath": "apps/cron-scheduler/tsconfig.app.json"
      }
    },
    "cron-worker": {
      "type": "application",
      "root": "apps/cron-worker",
      "entryFile": "main",
      "sourceRoot": "apps/cron-worker/src",
      "compilerOptions": {
        "tsConfigPath": "apps/cron-worker/tsconfig.app.json"
      }
    },
    "elastic-search": {
      "type": "application",
      "root": "apps/elastic-search",
      "entryFile": "main",
      "sourceRoot": "apps/elastic-search/src",
      "compilerOptions": {
        "tsConfigPath": "apps/elastic-search/tsconfig.app.json"
      }
    },
    "graphql-gateway": {
      "type": "application",
      "root": "apps/graphql-gateway",
      "entryFile": "main",
      "sourceRoot": "apps/graphql-gateway/src",
      "compilerOptions": {
        "tsConfigPath": "apps/graphql-gateway/tsconfig.app.json"
      }
    },
    "kafka-service": {
      "type": "application",
      "root": "apps/kafka-service",
      "entryFile": "main",
      "sourceRoot": "apps/kafka-service/src",
      "compilerOptions": {
        "tsConfigPath": "apps/kafka-service/tsconfig.app.json"
      }
    },
    "kafka-test": {
      "type": "application",
      "root": "apps/kafka-test",
      "entryFile": "main",
      "sourceRoot": "apps/kafka-test/src",
      "compilerOptions": {
        "tsConfigPath": "apps/kafka-test/tsconfig.app.json"
      }
    },
    "posts-subgraph": {
      "type": "application",
      "root": "apps/posts-subgraph",
      "entryFile": "main",
      "sourceRoot": "apps/posts-subgraph/src",
      "compilerOptions": {
        "tsConfigPath": "apps/posts-subgraph/tsconfig.app.json"
      }
    },
    "service-1": {
      "type": "application",
      "root": "apps/service-1",
      "entryFile": "main",
      "sourceRoot": "apps/service-1/src",
      "compilerOptions": {
        "tsConfigPath": "apps/service-1/tsconfig.app.json"
      }
    },
    "service-a": {
      "type": "application",
      "root": "apps/service-a",
      "entryFile": "main",
      "sourceRoot": "apps/service-a/src",
      "compilerOptions": {
        "tsConfigPath": "apps/service-a/tsconfig.app.json"
      }
    },
    "service-b": {
      "type": "application",
      "root": "apps/service-b",
      "entryFile": "main",
      "sourceRoot": "apps/service-b/src",
      "compilerOptions": {
        "tsConfigPath": "apps/service-b/tsconfig.app.json"
      }
    },
    "users-subgraph": {
      "type": "application",
      "root": "apps/users-subgraph",
      "entryFile": "main",
      "sourceRoot": "apps/users-subgraph/src",
      "compilerOptions": {
        "tsConfigPath": "apps/users-subgraph/tsconfig.app.json"
      }
    },
    "ws-node": {
      "type": "application",
      "root": "apps/ws-node",
      "entryFile": "main",
      "sourceRoot": "apps/ws-node/src",
      "compilerOptions": {
        "tsConfigPath": "apps/ws-node/tsconfig.app.json"
      }
    }
  }
}